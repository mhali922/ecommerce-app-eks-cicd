name: CI - Multi-Stage E-Commerce Pipeline

on:
  push:
    paths:
      - 'frontend/**'
      - 'auth/**'
      - 'product-api/**'
  pull_request:
    paths:
      - 'frontend/**'
  workflow_dispatch:

env:
  NODE_VERSION: 20

jobs:
  lint:
    name: Lint - ${{ matrix.service }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [frontend, auth, product-api]
    defaults:
      run:
        working-directory: ${{ matrix.service }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: npm install

      - name: Run Lint
        run: npm run lint || echo "No lint script defined"

  test:
    name: Test - ${{ matrix.service }}
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      matrix:
        service: [frontend, auth, product-api]
    defaults:
      run:
        working-directory: ${{ matrix.service }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: npm install

      - name: Run Tests
        run: npm test || echo "No test script defined"

  build:
    name: Build - ${{ matrix.service }}
    runs-on: ubuntu-latest
    needs: test
    strategy:
      matrix:
        service: [frontend, auth, product-api]
    defaults:
      run:
        working-directory: ${{ matrix.service }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: npm install

      - name: Run Build (only for frontend)
        if: matrix.service == 'frontend'
        run: npm run build
  
  docker-build-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [frontend, auth, product-api]
    defaults:
      run:
        working-directory: ${{ matrix.service }}
    env:
       VITE_AUTH_API_URL: ${{ secrets.VITE_AUTH_API_URL }}
       VITE_PRODUCT_API_URL: ${{ secrets.VITE_PRODUCT_API_URL }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: List Dockerfile for debug
        run: pwd && ls -l

      - name: Build Docker image
        run: |
          if [[ "${{ matrix.service }}" == "frontend" ]]; then
            docker build \
              --build-arg VITE_AUTH_API_URL=http://3.95.193.1:3002 \
              --build-arg VITE_PRODUCT_API_URL=http://3.95.193.1:3001 \
              -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.service }}:latest \
              -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.service }}:${{ github.sha }} .
          else
            docker build \
              -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.service }}:latest \
              -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.service }}:${{ github.sha }} .
          fi
          
      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.service }}:latest
